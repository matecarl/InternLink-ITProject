@page "/profile"
@using InternLink.Data
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Identity
@using Microsoft.EntityFrameworkCore
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager
@inject UserManager<ApplicationUser> UserManager
@inject IHttpContextAccessor HttpContextAccessor

@attribute [Authorize(Roles = "Student")]
@rendermode InteractiveServer

<div class="min-h-screen py-8">
    <div class="container mx-auto">
        @if (UserId is not null)
        {
        <StudentProfileComponent UserId="@UserId"/>
        }
    </div>
</div>

@code {
    private string UserId { get; set; }
    
    protected override async Task OnInitializedAsync()
    {
        await using var context = await DbFactory.CreateDbContextAsync();

        // Student profile exists validation -> otherwise redirect to profile creation
        var _studentProfile = await context.StudentProfiles.FirstOrDefaultAsync(x => x.UserId == UserManager.GetUserId(HttpContextAccessor.HttpContext.User));
        
        if (_studentProfile == null)
        {
            NavigationManager.NavigateTo("/Account/Manage/Profile");
        }
        
        UserId = _studentProfile.UserId;

    }

}
